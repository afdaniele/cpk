#!/usr/bin/env bash

set -ex

# make directories
mkdir -p "${CPK_CODE_DIR}" "${CPK_SOURCE_DIR}" "${CPK_INSTALL_DIR}"

# copy binaries
cp ${CPK_DECORATOR_DIR}/assets/bin/* /usr/local/bin/

# copy entrypoint and environment
cp ${CPK_DECORATOR_DIR}/assets/entrypoint.sh ${CPK_INSTALL_DIR}/entrypoint.sh
cp ${CPK_DECORATOR_DIR}/assets/environment.sh ${CPK_INSTALL_DIR}/environment.sh

# install dependencies (APT)
cpk-apt-install "${CPK_DECORATOR_DIR}/dependencies-apt.txt"

# install pip
python3 "${CPK_DECORATOR_DIR}/assets/get-pip.py"

# install dependencies (PIP3)
cpk-pip3-install "${CPK_DECORATOR_DIR}/dependencies-py3.txt"

# define healthcheck file
echo ND > /health
chmod 777 /health

# define constants
echo "\
export CPK_CODE_DIR=\"${CPK_CODE_DIR}\" \n\
export CPK_SOURCE_DIR=\"${CPK_SOURCE_DIR}\" \n\
export CPK_INSTALL_DIR=\"${CPK_INSTALL_DIR}\" \
" > "${CPK_INSTALL_DIR}/constants.sh"

# copy project
PROJECT_PATH="${CPK_SOURCE_DIR}/cpk"
cp -R "${CPK_DECORATOR_DIR}" "${PROJECT_PATH}"

## make empty `cpk` project
#mkdir -p "${PROJECT_PATH}"


find /code/ | sort

# install launcher scripts
cpk-install-launchers "${PROJECT_PATH}/launchers"

# create non-root user
addgroup --gid ${CPK_GROUP_GID} "${CPK_GROUP_NAME}" && \
useradd \
    --create-home \
    --home-dir "${CPK_USER_HOME}" \
    --comment "CPK User" \
    --shell "/bin/bash" \
    --password "paf4ePnqFtlAE" \
    --uid ${CPK_USER_UID} \
    --gid ${CPK_GROUP_GID} \
    "${CPK_USER_NAME}"
